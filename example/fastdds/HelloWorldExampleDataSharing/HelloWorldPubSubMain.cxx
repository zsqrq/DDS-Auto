// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file HelloWorldPubSubMain.cpp
 * This file acts as a main entry point to the application.
 *
 * This file was generated by the tool fastddsgen.
 */

#include "HelloWorldPublisher.h"
#include "HelloWorldSubscriber.h"
#include "glog/logging.h"

int main(int argc, char** argv) {
  FLAGS_alsologtostderr = 1;
  FLAGS_minloglevel = 0;
  google::InitGoogleLogging(argv[0]);

  int type = 0;
  int count = 1000;
  int sleep = 100;

  //   if (argc == 2) {
  //     if (strcmp(argv[1], "publisher") == 0) {
  //       type = 1;
  //     } else if (strcmp(argv[1], "subscriber") == 0) {
  //       type = 2;
  //     }
  //   }

  if (argc > 1) {
    if (strcmp(argv[1], "publisher") == 0) {
      LOG(INFO) << argv[1] << " , Matched";
      type = 1;
      LOG(INFO) << "Switched type to : " << type;
      if (argc >= 3) {
        count = std::atoi(argv[2]);
        if (argc == 4) {
          sleep = std::atoi(argv[3]);
        }
      }
    } else if (strcmp(argv[1], "subscriber") == 0) {
      LOG(INFO) << argv[1] << " , Matched";
      type = 2;
      LOG(INFO) << "Switched type to : " << type;
    }
  } else {
    LOG(ERROR) << "publisher OR subscriber argument needed" << std::endl;
    return 0;
  }

  //   if (argc > 1) {
  //     if (strcmp(argv[1], "publisher") == 0) {
  //       type = 1;
  //       if (argc >= 3) {
  //         count = atoi(argv[2]);
  //         if (argc == 4) {
  //           sleep = atoi(argv[3]);
  //         }
  //       }
  //     } else if (strcmp(argv[1], "subscriber") == 0) {
  //       type = 2;
  //     }
  //   } else {
  //     LOG(INFO) << "publisher OR subscriber argument needed" << std::endl;
  //     // Log::Reset();
  //     return 0;
  //   }

  if (type == 0) {
    LOG(ERROR) << "Error: Incorrect arguments.";
    LOG(ERROR) << "Usage: " << std::endl << std::endl;
    LOG(ERROR) << argv[0] << " publisher|subscriber" << std::endl << std::endl;
    return 0;
  }

  LOG(INFO) << "Starting ";

  // Register the type being used

  switch (type) {
    case 1: {
      HelloWorldPublisher mypub;
      LOG(INFO) << "Starting Publisher Initializing ... ";
      if (mypub.init()) {
        mypub.run(static_cast<uint32_t>(count), static_cast<uint32_t>(sleep));
      }
      break;
    }
    case 2: {
      HelloWorldSubscriber mysub;
      LOG(INFO) << "Starting Subscriber Initializing ... ";
      if (mysub.init()) {
        mysub.run();
      }
      break;
    }
  }

  return 0;
}
